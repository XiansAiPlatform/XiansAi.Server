version: '3.8'

services:
  # Web API service - Development
  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=--web
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:80"
      - "5001:443"
    networks:
      - xiansai-network
    volumes:
      - ./.cert:/app/.cert
    restart: unless-stopped

  # Web API service - Production
  webapi-prod:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=--web
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5002:80"
      - "5003:443"
    networks:
      - xiansai-network
    volumes:
      - ./.cert:/app/.cert
    restart: unless-stopped
    profiles:
      - production

  # Web API service - Staging
  webapi-staging:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=--web
      - ASPNETCORE_ENVIRONMENT=Staging
    ports:
      - "5004:80"
      - "5005:443"
    networks:
      - xiansai-network
    volumes:
      - ./.cert:/app/.cert
    restart: unless-stopped
    profiles:
      - staging

  # Library API service
  libapi:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SERVICE_TYPE=--lib
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5010:80"
      - "5011:443"
    networks:
      - xiansai-network
    volumes:
      - ./.cert:/app/.cert
    restart: unless-stopped

  # Keycloak service - Development
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    user: root
    container_name: Keycloak
    command: start-dev
    environment:
      - SERVICE_TYPE=--web
      - ASPNETCORE_ENVIRONMENT=Development
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - 18080:8080
    networks:
      - xiansai-network
    volumes:
      - ./.containers/identity:/opt/keycloak/data
    restart: unless-stopped
    

  # Combined service (all APIs)
  # Uncomment this to run all services in a single container
  # allapi:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     - SERVICE_TYPE=--all
  #     - ASPNETCORE_ENVIRONMENT=Development
  #   ports:
  #     - "5020:80"
  #     - "5021:443"
  #   networks:
  #     - xiansai-network
  #   volumes:
  #     - ./.cert:/app/.cert
  #   restart: unless-stopped

networks:
  xiansai-network:
    driver: bridge 