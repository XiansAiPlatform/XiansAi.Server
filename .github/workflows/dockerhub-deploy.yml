name: Build and Publish to DockerHub

on:
  push:
    branches: [ dockerhub ]
    tags:
      - 'v*'  # This will trigger on version tags like v1.0.0, v2.1.0, etc.
  workflow_dispatch:  # Allow manual triggering

env:
  IMAGE_NAME: xiansai-server
  DOCKERHUB_USERNAME: hasithy99x  # Change this to your DockerHub username/org

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          # Branch name for non-main branches
          type=ref,event=branch
          # Tag for version tags
          type=ref,event=tag
          # SHA for unique identification
          type=sha,prefix={{branch}}-
          # Latest for dockerhub branch
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/dockerhub' }}
        labels: |
          org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          org.opencontainers.image.description=XiansAi Server - AI workflow platform
          org.opencontainers.image.vendor=${{ env.DOCKERHUB_USERNAME }}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./XiansAi.Server.Src
        file: ./XiansAi.Server.Src/Dockerfile.production
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Generate build summary
      run: |
        echo "## 🐳 Docker Image Published Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Docker Pull Command:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 